# encoding: utf-8

require 'rubygems'
require 'bundler'
begin
  Bundler.setup(:default, :development)
rescue Bundler::BundlerError => e
  $stderr.puts e.message
  $stderr.puts "Run `bundle install` to install missing gems"
  exit e.status_code
end

require 'rake'
require 'jeweler'
Jeweler::Tasks.new do |gem|
  # gem is a Gem::Specification... see http://guides.rubygems.org/specification-reference/ for more options
  gem.name = '<%= file_name %>'
  gem.license = "MIT"
  gem.summary = '<%= @summary -%>'
  gem.description = '<%= @description -%>'
  gem.author = '<%= @user_name -%>'
  gem.email = '<%= @user_email -%>'
  gem.homepage = '<%= @homepage -%>'
  
  # dependencies defined in Gemfile
end
Jeweler::RubygemsDotOrgTasks.new

class Jeweler::Generator
  def target_dir
    '.'
  end
  def create_git_and_github_repo
    create_version_control
    create_and_push_repo
  end
end
      
desc "create a new git and related GitHub's repository'"
task :create_repo do
  options = {
    project_name: '<%= file_name -%>', 
    user_name: '<%= @user_name -%>', 
    user_email: '<%= @user_email -%>',
    github_username: '<%= @github_username -%>',
    summary: '<%= @summary -%>',
    description: '<%= @description -%>',
    homepage: '<%= @homepage -%>',
    testing_framework: :rspec, 
    documentation_framework: :rdoc
  }
  g = Jeweler::Generator.new(options)
  g.create_git_and_github_repo
end

desc "push shared collection into CENIT-Hub"
require File.expand_path(File.join(*%w[ lib cenit collection <%= collection_name -%>]), File.dirname(__FILE__))
task :push do
  push_api = 'http://localhost:3000/api/v1/push'
  user_key = ask("User Key: ")
  user_token = ask("User Token: ")
  config = {:push_url=> push_api, :user_key=> user_key, :user_token=> user_token}
  Cenit::Collection.push_collection(config)
end

desc "show shared collection"
require File.expand_path(File.join(*%w[ lib cenit collection <%= collection_name -%>]), File.dirname(__FILE__))
task :show do
  puts Cenit::Collection.show_collection
end

desc "push sample data"
require File.expand_path(File.join(*%w[ lib cenit collection <%= collection_name -%>]), File.dirname(__FILE__))
task :push_sample do
  push_api = 'http://localhost:3000/api/v1/push'
  user_key = ask("User Key: ")
  user_token = ask("User Token: ")
  model = ask("Model name: ")

  config = {:push_url=> push_api, :user_key=> user_key, :user_token=> user_token}
  Cenit::Collection.sample_data(model, config)
end

require 'rspec/core'
require 'rspec/core/rake_task'
RSpec::Core::RakeTask.new(:spec) do |spec|
  spec.pattern = FileList['spec/**/*_spec.rb']
end

desc "Code coverage detail"
task :simplecov do
  ENV['COVERAGE'] = "true"
  Rake::Task['spec'].execute
end

task :default => :spec

require 'rdoc/task'
Rake::RDocTask.new do |rdoc|
  version = File.exist?('VERSION') ? File.read('VERSION') : ""

  rdoc.rdoc_dir = 'rdoc'
  rdoc.title = "<%= file_name -%> #{version}"
  rdoc.rdoc_files.include('README*')
  rdoc.rdoc_files.include('lib/**/*.rb')
end
